/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  RandomNumberConsumerV2,
  RandomNumberConsumerV2Interface,
} from "../../contracts/RandomNumberConsumerV2";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "vrfCoordinator",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "keyHash",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "have",
        type: "address",
      },
      {
        internalType: "address",
        name: "want",
        type: "address",
      },
    ],
    name: "OnlyCoordinatorCanFulfill",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "ReturnedRandomness",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "rawFulfillRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requestRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "s_randomWords",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_requestId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x610100604052348015610010575f80fd5b5060405162000abe38038062000abe833981810160405281019061003491906101d8565b818073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050508173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508060e081815250503360025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508267ffffffffffffffff1660c08167ffffffffffffffff1681525050505050610228565b5f80fd5b5f67ffffffffffffffff82169050919050565b61012a8161010e565b8114610134575f80fd5b50565b5f8151905061014581610121565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101748261014b565b9050919050565b6101848161016a565b811461018e575f80fd5b50565b5f8151905061019f8161017b565b92915050565b5f819050919050565b6101b7816101a5565b81146101c1575f80fd5b50565b5f815190506101d2816101ae565b92915050565b5f805f606084860312156101ef576101ee61010a565b5b5f6101fc86828701610137565b935050602061020d86828701610191565b925050604061021e868287016101c4565b9150509250925092565b60805160a05160c05160e05161085c620002625f395f61021801525f61023901525f6101dc01525f818160c40152610118015261085c5ff3fe608060405234801561000f575f80fd5b506004361061004a575f3560e01c80631fe543e31461004e578063e0c862891461006a578063e89e106a14610074578063f6eaffc814610092575b5f80fd5b61006860048036038101906100639190610538565b6100c2565b005b610072610182565b005b61007c6102c8565b60405161008991906105a1565b60405180910390f35b6100ac60048036038101906100a791906105ba565b6102ce565b6040516100b991906105a1565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461017457337f00000000000000000000000000000000000000000000000000000000000000006040517f1cf993f400000000000000000000000000000000000000000000000000000000815260040161016b929190610624565b60405180910390fd5b61017e82826102ed565b5050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101da575f80fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635d3b1d307f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006003620186a060026040518663ffffffff1660e01b81526004016102809594939291906106bf565b6020604051808303815f875af115801561029c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102c09190610724565b600181905550565b60015481565b5f81815481106102dc575f80fd5b905f5260205f20015f915090505481565b805f908051906020019061030292919061033e565b507fefb16d61046900da527008568620fb9f8420e2f5ed4de3bfbded5035c9362b0e816040516103329190610806565b60405180910390a15050565b828054828255905f5260205f20908101928215610378579160200282015b8281111561037757825182559160200191906001019061035c565b5b5090506103859190610389565b5090565b5b808211156103a0575f815f90555060010161038a565b5090565b5f604051905090565b5f80fd5b5f80fd5b5f819050919050565b6103c7816103b5565b81146103d1575f80fd5b50565b5f813590506103e2816103be565b92915050565b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610432826103ec565b810181811067ffffffffffffffff82111715610451576104506103fc565b5b80604052505050565b5f6104636103a4565b905061046f8282610429565b919050565b5f67ffffffffffffffff82111561048e5761048d6103fc565b5b602082029050602081019050919050565b5f80fd5b5f6104b56104b084610474565b61045a565b905080838252602082019050602084028301858111156104d8576104d761049f565b5b835b8181101561050157806104ed88826103d4565b8452602084019350506020810190506104da565b5050509392505050565b5f82601f83011261051f5761051e6103e8565b5b813561052f8482602086016104a3565b91505092915050565b5f806040838503121561054e5761054d6103ad565b5b5f61055b858286016103d4565b925050602083013567ffffffffffffffff81111561057c5761057b6103b1565b5b6105888582860161050b565b9150509250929050565b61059b816103b5565b82525050565b5f6020820190506105b45f830184610592565b92915050565b5f602082840312156105cf576105ce6103ad565b5b5f6105dc848285016103d4565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61060e826105e5565b9050919050565b61061e81610604565b82525050565b5f6040820190506106375f830185610615565b6106446020830184610615565b9392505050565b5f819050919050565b61065d8161064b565b82525050565b5f67ffffffffffffffff82169050919050565b61067f81610663565b82525050565b5f61ffff82169050919050565b61069b81610685565b82525050565b5f63ffffffff82169050919050565b6106b9816106a1565b82525050565b5f60a0820190506106d25f830188610654565b6106df6020830187610676565b6106ec6040830186610692565b6106f960608301856106b0565b61070660808301846106b0565b9695505050505050565b5f8151905061071e816103be565b92915050565b5f60208284031215610739576107386103ad565b5b5f61074684828501610710565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b610781816103b5565b82525050565b5f6107928383610778565b60208301905092915050565b5f602082019050919050565b5f6107b48261074f565b6107be8185610759565b93506107c983610769565b805f5b838110156107f95781516107e08882610787565b97506107eb8361079e565b9250506001810190506107cc565b5085935050505092915050565b5f6020820190508181035f83015261081e81846107aa565b90509291505056fea2646970667358221220d089dc7c8a7166a6dcf30e1789dfe8d34d04bd0358b3e2e9362750f476965e9f64736f6c63430008140033";

type RandomNumberConsumerV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RandomNumberConsumerV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RandomNumberConsumerV2__factory extends ContractFactory {
  constructor(...args: RandomNumberConsumerV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    subscriptionId: PromiseOrValue<BigNumberish>,
    vrfCoordinator: PromiseOrValue<string>,
    keyHash: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RandomNumberConsumerV2> {
    return super.deploy(
      subscriptionId,
      vrfCoordinator,
      keyHash,
      overrides || {}
    ) as Promise<RandomNumberConsumerV2>;
  }
  override getDeployTransaction(
    subscriptionId: PromiseOrValue<BigNumberish>,
    vrfCoordinator: PromiseOrValue<string>,
    keyHash: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      subscriptionId,
      vrfCoordinator,
      keyHash,
      overrides || {}
    );
  }
  override attach(address: string): RandomNumberConsumerV2 {
    return super.attach(address) as RandomNumberConsumerV2;
  }
  override connect(signer: Signer): RandomNumberConsumerV2__factory {
    return super.connect(signer) as RandomNumberConsumerV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RandomNumberConsumerV2Interface {
    return new utils.Interface(_abi) as RandomNumberConsumerV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RandomNumberConsumerV2 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as RandomNumberConsumerV2;
  }
}
