/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  KeepersCounter,
  KeepersCounterInterface,
} from "../../contracts/KeepersCounter";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "updateInterval",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "checkUpkeep",
    outputs: [
      {
        internalType: "bool",
        name: "upkeepNeeded",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "counter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "interval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTimeStamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "performUpkeep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561000f575f80fd5b5060405161072038038061072083398181016040528101906100319190610083565b8060808181525050426001819055505f8081905550506100ae565b5f80fd5b5f819050919050565b61006281610050565b811461006c575f80fd5b50565b5f8151905061007d81610059565b92915050565b5f602082840312156100985761009761004c565b5b5f6100a58482850161006f565b91505092915050565b6080516106536100cd5f395f818161018a01526101c101526106535ff3fe608060405234801561000f575f80fd5b5060043610610055575f3560e01c80633f3b3b27146100595780634585e33b1461007757806361bc221a146100935780636e04ff0d146100b1578063947a36fb146100e2575b5f80fd5b610061610100565b60405161006e91906101fb565b60405180910390f35b610091600480360381019061008c9190610286565b610106565b005b61009b610180565b6040516100a891906101fb565b60405180910390f35b6100cb60048036038101906100c69190610409565b610185565b6040516100d99291906104e4565b60405180910390f35b6100ea6101bf565b6040516100f791906101fb565b60405180910390f35b60015481565b5f61011e60405180602001604052805f815250610185565b50905080610161576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101589061056c565b60405180910390fd5b4260018190555060015f5461017691906105b7565b5f81905550505050565b5f5481565b5f60607f0000000000000000000000000000000000000000000000000000000000000000600154426101b791906105ea565b119150915091565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f819050919050565b6101f5816101e3565b82525050565b5f60208201905061020e5f8301846101ec565b92915050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f8083601f84011261024657610245610225565b5b8235905067ffffffffffffffff81111561026357610262610229565b5b60208301915083600182028301111561027f5761027e61022d565b5b9250929050565b5f806020838503121561029c5761029b61021d565b5b5f83013567ffffffffffffffff8111156102b9576102b8610221565b5b6102c585828601610231565b92509250509250929050565b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61031b826102d5565b810181811067ffffffffffffffff8211171561033a576103396102e5565b5b80604052505050565b5f61034c610214565b90506103588282610312565b919050565b5f67ffffffffffffffff821115610377576103766102e5565b5b610380826102d5565b9050602081019050919050565b828183375f83830152505050565b5f6103ad6103a88461035d565b610343565b9050828152602081018484840111156103c9576103c86102d1565b5b6103d484828561038d565b509392505050565b5f82601f8301126103f0576103ef610225565b5b813561040084826020860161039b565b91505092915050565b5f6020828403121561041e5761041d61021d565b5b5f82013567ffffffffffffffff81111561043b5761043a610221565b5b610447848285016103dc565b91505092915050565b5f8115159050919050565b61046481610450565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156104a1578082015181840152602081019050610486565b5f8484015250505050565b5f6104b68261046a565b6104c08185610474565b93506104d0818560208601610484565b6104d9816102d5565b840191505092915050565b5f6040820190506104f75f83018561045b565b818103602083015261050981846104ac565b90509392505050565b5f82825260208201905092915050565b7f54696d6520696e74657276616c206e6f74206d657400000000000000000000005f82015250565b5f610556601583610512565b915061056182610522565b602082019050919050565b5f6020820190508181035f8301526105838161054a565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6105c1826101e3565b91506105cc836101e3565b92508282019050808211156105e4576105e361058a565b5b92915050565b5f6105f4826101e3565b91506105ff836101e3565b92508282039050818111156106175761061661058a565b5b9291505056fea2646970667358221220b0c44232d003fc1357427704a16575094f26f49254bd7a6935db59b4c4b581a964736f6c63430008140033";

type KeepersCounterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KeepersCounterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KeepersCounter__factory extends ContractFactory {
  constructor(...args: KeepersCounterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    updateInterval: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<KeepersCounter> {
    return super.deploy(
      updateInterval,
      overrides || {}
    ) as Promise<KeepersCounter>;
  }
  override getDeployTransaction(
    updateInterval: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(updateInterval, overrides || {});
  }
  override attach(address: string): KeepersCounter {
    return super.attach(address) as KeepersCounter;
  }
  override connect(signer: Signer): KeepersCounter__factory {
    return super.connect(signer) as KeepersCounter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KeepersCounterInterface {
    return new utils.Interface(_abi) as KeepersCounterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KeepersCounter {
    return new Contract(address, _abi, signerOrProvider) as KeepersCounter;
  }
}
